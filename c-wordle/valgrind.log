==985749== Memcheck, a memory error detector
==985749== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==985749== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==985749== Command: ./a.out
==985749== Parent PID: 985747
==985749== 
==985749== Conditional jump or move depends on uninitialised value(s)
==985749==    at 0x10939A: parse_guess (parse.c:13)
==985749==    by 0x109123: main (main.c:11)
==985749== 
==985749== Conditional jump or move depends on uninitialised value(s)
==985749==    at 0x1093B0: parse_guess (parse.c:19)
==985749==    by 0x109123: main (main.c:11)
==985749== 
==985749== Conditional jump or move depends on uninitialised value(s)
==985749==    at 0x10934C: is_viable_candidate (is_viable.c:45)
==985749==    by 0x10915E: main (main.c:15)
==985749== 
==985749== Conditional jump or move depends on uninitialised value(s)
==985749==    at 0x10934C: is_viable_candidate (is_viable.c:45)
==985749==    by 0x10942B: score (score.c:13)
==985749==    by 0x109173: main (main.c:16)
==985749== 
==985749== Conditional jump or move depends on uninitialised value(s)
==985749==    at 0x109417: score (score.c:10)
==985749==    by 0x109173: main (main.c:16)
==985749== 
==985749== 
==985749== More than 10000000 total errors detected.  I'm not reporting any more.
==985749== Final error counts will be inaccurate.  Go fix your program!
==985749== Rerun with --error-limit=no to disable this cutoff.  Note
==985749== that errors may occur in your program without prior warning from
==985749== Valgrind, because errors are no longer being displayed.
==985749== 
==985749== 
==985749== Process terminating with default action of signal 1 (SIGHUP)
==985749==    at 0x109348: is_viable_candidate (is_viable.c:45)
==985749==    by 0x10942B: score (score.c:13)
==985749==    by 0x109173: main (main.c:16)
==985749== 
==985749== FILE DESCRIPTORS: 4 open at exit.
==985749== Open file descriptor 3: /home/admin/CS-2810/c-wordle/valgrind.log
==985749==    <inherited from parent>
==985749== 
==985749== Open file descriptor 2: /dev/pts/1
==985749==    <inherited from parent>
==985749== 
==985749== Open file descriptor 1: /dev/pts/1
==985749==    <inherited from parent>
==985749== 
==985749== Open file descriptor 0: /dev/pts/1
==985749==    <inherited from parent>
==985749== 
==985749== 
==985749== HEAP SUMMARY:
==985749==     in use at exit: 208,904 bytes in 12,973 blocks
==985749==   total heap usage: 12,986 allocs, 13 frees, 346,336 bytes allocated
==985749== 
==985749== LEAK SUMMARY:
==985749==    definitely lost: 0 bytes in 0 blocks
==985749==    indirectly lost: 0 bytes in 0 blocks
==985749==      possibly lost: 0 bytes in 0 blocks
==985749==    still reachable: 208,904 bytes in 12,973 blocks
==985749==         suppressed: 0 bytes in 0 blocks
==985749== Reachable blocks (those to which a pointer was found) are not shown.
==985749== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==985749== 
==985749== Use --track-origins=yes to see where uninitialised values come from
==985749== For lists of detected and suppressed errors, rerun with: -s
==985749== ERROR SUMMARY: 10000000 errors from 5 contexts (suppressed: 0 from 0)
